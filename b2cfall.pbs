#PBS -N WHAT.FROM
#PBS -A ACF-UTK0011
#PBS -l feature=MACHINE
#PBS -l partition=MACHINE
#PBS -l nodes=1:ppn=16,walltime=23:50:00
#PBS -j oe
#PBS -S /bin/bash
LD_LIBRARY_PATH=$HOME/lib:$HOME/lib64:$LD_LIBRARY_PATH
c=/lustre/haven/user/audris/c2fb
cd $c

machine=MACHINE
maxM=14000
[[ $machine == monster ]] && maxM=30000
[[ $machine == rho ]] && maxM=900
[[ $machine == sigma ]] && maxM=2900
module load python3/3.6.5
ver=R

#for i in {0..7}; do 
i=FROM

if test 'a' = 'b'; then

for j in {0..3}
do zcat cnp2bfFull${ver}$(($i*4+$j)).s
done | perl -ane 'chop();@x=split(/;/);print "$x[1];$x[0];$x[2]\n" if "$x[1];$x[0]" =~ /^[0-9a-f]{40};[0-9a-f]{40}$/' | perl -I $HOME/lib/perl5 -I $HOME/lookup  $HOME/lookup/splitSec.perl b2cnpfFull${ver}.$i. 128 & 
wait
echo b2cfnpFull${ver}.$i.

fi 
if test 'a' = 'b'; then

for j in {0..3}
do zcat c2fbbFull${ver}$(($i*4+$j)).s
done | perl -ane 'chop();@x=split(/;/);print "$x[2];$x[0];$x[1]\n" if "$x[2];$x[0]" =~ /^[0-9a-f]{40};[0-9a-f]{40}$/' | perl -I $HOME/lib/perl5 -I $HOME/lookup  $HOME/lookup/splitSec.perl b2cfFull${ver}.$i. 128 & 
wait
echo b2cfFull${ver}.$i.

fi
if test 'a' = 'b'; then

for j in {0..127}
do zcat b2cfFull${ver}.$i.$j.gz | lsort ${maxM}M -t\; -k1,3 -u | gzip > b2cfFull${ver}.$i.$j.s 
   echo b2cfFull${ver}.$i.$j.s
done

fi
if test 'a' = 'b'; then

for j in {0..127}
do zcat b2cnpfFull${ver}.$i.$j.gz | lsort ${maxM}M -t\; -k1,3 -u | gzip > b2cnpfFull${ver}.$i.$j.s
   echo b2cnpfFull${ver}.$i.$j.s
done

fi

if test 'a' = 'b'; then

for j in {0..3}
do str="lsort ${maxM}M -t\; -k1,3 --merge -u"
  for i in {0..31} 
  do str="$str <(zcat b2cnpfFull${ver}.$i.$((FROM*4+$j)).s)"
  done
  eval $str | gzip > b2cnpfFull${ver}$((FROM*4+$j)).s
  echo b2cnpfFull${ver}$((FROM*4+$j)).s
done

fi
if test 'a' = 'b'; then

for l in {0..3}
do k=$((FROM*4+$l))
   str="$HOME/bin/lsort ${maxM}M -t\; -k1,3 --merge -u"
   for j in {0..31}
   do str="$str <(zcat b2cfFull${ver}.$j.$k.s)"
   done
   eval $str | gzip > b2cfFull${ver}$k.s
   echo b2cfFull${ver}$k.s
done

#fi
#if test 'a' = 'a'; then

for j in {0..3}
do lsort ${maxM}M -t\; -k1,3 --merge <(zcat b2cnpfFull${ver}$((FROM*4+$j)).s) <(zcat b2cfFull${ver}$((FROM*4+$j)).s) | gzip > b2callfFull${ver}$((FROM*4+$j)).s
   echo b2callfFull${ver}$((FROM*4+$j)).s
done

#fi
#if test 'a' = 'a'; then

for j in {0..3}
do zcat b2callfFull${ver}$((FROM*4+$j)).s |cut -d\; -f1,2 | uniq | gzip > b2callFull${ver}$((FROM*4+$j)).s
   echo b2callFull${ver}$((FROM*4+$j)).s
done

#fi
#if test 'a' = 'a'; then

for j in {0..3}  
do zcat b2callFull${ver}$((FROM*4+$j)).s |cut -d\; -f1 | uniq | gzip > ballFull${ver}$((FROM*4+$j)).s
done
echo ballFull${ver}$((FROM*4+$j)).s

#fi
#if test 'a' = 'a'; then

for j in {0..3}
do  zcat b2callfFull${ver}$((FROM*4+$j)).s | cut -d\; -f1,3 | uniq | gzip > b2fallFull${ver}$((FROM*4+$j)).s
done
echo b2fallFull${ver}$((FROM*4+$j)).s

fi
if test 'a' = 'b'; then

for j in {0..3}
do k=$(($i*4+$j))
 zcat c2fbbFull${ver}$k.s | cut -d\; -f1,2 | uniq | gzip > c2fD${ver}$k.s &
done
wait
echo c2fD${ver}$k.s

fi
if test 'a' = 'b'; then

for j in {0..3}
do k=$(($i*4+$j))
 zcat cnp2bfFull${ver}$k.s | cut -d\; -f1,3 | uniq | gzip > c2fN${ver}$k.s &
done
wait
echo c2fN${ver}$k.s

fi
if test 'a' = 'b'; then

for j in {0..3}
do k=$(($i*4+$j))
 zcat cnp2bfFull${ver}$k.s | cut -d\; -f1,2 | uniq | gzip > c2bN${ver}$k.s &
done
wait
echo c2bN${ver}$k.s

fi
if test 'a' = 'b'; then

for j in {0..3}
do k=$(($i*4+$j))
 zcat c2fbbFull${ver}$k.s | cut -d\; -f1,3 | grep -v ';$' | uniq | gzip > c2bD${ver}$k.s &
done
wait
echo c2bD${ver}$k.s 
 
fi
if test 'c2bDsrt' = 'WHAT'; then

for j in {0..7}
do k=$((FROM*8+j))
   zcat c2bD${ver}$k.s  | grep -v ';$' | uniq | lsort ${maxM}M -t\; -k1,2 -u | gzip > c2bD${ver}$k.ss 
   echo c2bD${ver}$k.ss
   zcat c2bN${ver}$k.s | grep -v ';$' | uniq | lsort ${maxM}M -t\; -k1,2 -u | gzip > c2bN${ver}$k.ss 
   echo c2bN${ver}$k.ss
done
   
fi
if test 'a' = 'b'; then

for j in {0..3}
do k=$(($i*4+$j))
   lsort ${maxM}M -t\; -k1,2 --merge -u <(zcat c2fD${ver}$k.s) <(zcat c2fN${ver}$k.s) | gzip > c2fallFull${ver}$k.s
   echo c2fallFull${ver}$k.s
done

fi
if test 'c2ball' = 'WHAT'; then

for j in {0..7}
do k=$(($i*8+$j))
   lsort ${maxM}M -t\; -k1,2 --merge -u <(zcat c2bD${ver}$k.ss) <(zcat c2bN${ver}$k.ss) | gzip > c2ballFull${ver}$k.s
   echo c2ballFull${ver}$k.s
done

fi
if test 'call' = 'WHAT'; then

for j in {0..7}
do k=$((FROM*8+$j))
   zcat c2fallFullR$k.s | cut -d\; -f1 | uniq | gzip > callFullR$k.s
   echo callFull${ver}$k.s
done

fi
